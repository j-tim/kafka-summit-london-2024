server:
  port: 8082

spring:
  application:
    name: consumer-application-first

  kafka:
    bootstrap-servers: localhost:9092

    producer:
      # Important!
      # In case you publish to a 'dead letter topic' your consumer application becomes
      # a producer as well! So you need to specify the producer properties!
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer

    consumer:
      group-id: my-consumer-group-first
      auto-offset-reset: earliest
      # Configures the Spring Kafka ErrorHandlingDeserializer that delegates to the 'real' deserializers
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        # Tells KafkaAvroDeserializer to look up the SpecificRecord class (the generated Java Class based on our Avro Schema)
        specific.avro.reader: true
#         Delegate deserializers
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
    streams:
      application-id: kafka-streams-example-app
      bootstrap-servers: ${spring.kafka.bootstrap-servers}
      # This setting is here to don't wait until the buffer is full
      properties:
        schema.registry.url: http://schema-registry:8081
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        # LogAndFailExceptionHandler is the default!
        default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndFailExceptionHandler
      state-store-cache-max-size: 0
    #        default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
    #        default.deserialization.exception.handler: org.springframework.kafka.streams.RecoveringDeserializationExceptionHandler

    properties:
      schema.registry.url: http://localhost:8081
merak-kafka:
  example:
    streams:
      output:
        topicName: backward-output-topic
    producer:
      topicName: customers-topic-backward
management:
  endpoints:
    web:
      exposure:
        include: "*"